grails.serverURL = "{{mapper.grails.serverURL}}"

mapper {
    resolverURL = "{{mapper.resolverURL}}"
    contextExtension = '' //extension to the context path (after nsl-mapper).
    defaultProtocol = 'http'

    defaultResolver = { ident ->
            Map serviceHosts = [
                    {{ shard_namespace }}: '{{mapper.shards.baseURL}}'
            ]
            String host = serviceHosts[ident.nameSpace]
            if (ident.objectType == 'treeElement') {
                return "${host}/nxl/services/rest/${ident.objectType}/${ident.versionNumber}/${ident.idNumber}"
            }
            if (ident.nameSpace == "foa") {
                return "${host}/nxl/foa/taxa/${ident.idNumber}/summary"
            }
            return "${host}/nxl/services/rest/${ident.objectType}/${ident.nameSpace}/${ident.idNumber}"
     }



    format = [
            html: [
                    resolver: defaultResolver
            ],
            json: [
                    resolver: defaultResolver
            ],
            xml : [
                    resolver: defaultResolver
            ],
            rdf : [
                    resolver: { ident ->
                        String url = "DESCRIBE <http://biodiversity.org.au/boa/${ident.objectType}/${ident.nameSpace}/${ident.idNumber}>".encodeAsURL()
                        "sparql/?query=${url}"
                    }
            ]
    ]


}

api.auth = [
        '558aaeb5-3e5b-4dd3-ad03-d17c2689b70d': [
                application: 'nsl/services',
                roles      : ['admin'],
                host       : '127.0.0.1'
        ]
]

ldap {
    skip{
      authentication = false
    }
    domain = 'domain'
    server.url = 'ldap://localhost:10389'
    search {
        base = 'ou=people,dc=example,dc=com'
        user = 'uid=admin,ou=system'
        pass = 'secret'

        group {
            name = 'ou=groups,dc=example,dc=com'
            member {
                element = 'uniqueMember'
                prefix = 'uid='
                postfix = ''
            }
        }
    }
}
